[versions]
springboot = "3.2.0"
jjwt = "0.11.5"
querydsl = "5.0.0"
shedlock = "5.7.0"
jackson = "2.15.2"
jackson-module-kotlin = "2.15.2"
guava = "32.1.3-jre"
bouncycastle = "1.77"
mockito = "5.11.0"
kotlin = "1.9.22"
aws = "2.25.22"
elasticsearch = "8.12.0"
jsoup = "1.17.1"
springdoc = "2.2.0"
codec = "1.16.1"
junit-jupiter-engine = "5.10.1"

[libraries]
# ✅ Spring Boot
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springboot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "springboot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springboot" }
spring-boot-starter-batch = { module = "org.springframework.boot:spring-boot-starter-batch", version.ref = "springboot" }
spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "springboot" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "springboot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springboot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springboot" }

# ✅ JWT
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }

# ✅ QueryDSL
querydsl-jpa = { module = "com.querydsl:querydsl-jpa", version.ref = "querydsl" }
querydsl-apt = { module = "com.querydsl:querydsl-apt", version.ref = "querydsl" }

# ✅ 기타 라이브러리
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson-module-kotlin" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
bouncycastle = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncycastle" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "codec" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

# ✅ Swagger / OpenAPI
springdoc-openapi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }

# ✅ AWS
aws-s3 = { module = "software.amazon.awssdk:s3", version.ref = "aws" }

# ✅ Elasticsearch
elasticsearch-java = { module = "co.elastic.clients:elasticsearch-java", version.ref = "elasticsearch" }

# ✅ ShedLock
shedlock-spring = { module = "net.javacrumbs.shedlock:shedlock-spring", version.ref = "shedlock" }
shedlock-jdbc = { module = "net.javacrumbs.shedlock:shedlock-provider-jdbc-template", version.ref = "shedlock" }

# ✅ Kotlin
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }

# ✅ JUnit (추가됨)
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter-engine" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }

[bundles]
springboot-core = [
  "spring-boot-starter-web",
  "spring-boot-starter-data-jpa",
  "spring-boot-starter-validation",
  "spring-boot-starter-security"
]

jjwt = [
  "jjwt-api",
  "jjwt-impl",
  "jjwt-jackson"
]

shedlock = [
  "shedlock-spring",
  "shedlock-jdbc"
]

querydsl = [
  "querydsl-jpa",
  "querydsl-apt"
]
